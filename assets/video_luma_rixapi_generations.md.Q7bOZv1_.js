import{_ as s,c as i,o as a,a3 as t}from"./chunks/framework.Yvq-SOzX.js";const g=JSON.parse('{"title":"生成视频","description":"","frontmatter":{},"headers":[],"relativePath":"video/luma/rixapi/generations.md","filePath":"video/luma/rixapi/generations.md"}'),e={name:"video/luma/rixapi/generations.md"},n=t(`<h1 id="生成视频" tabindex="-1">生成视频 <a class="header-anchor" href="#生成视频" aria-label="Permalink to &quot;生成视频&quot;">​</a></h1><blockquote><p>POST <code>https://api.gptoai.cc/luma/generations</code></p></blockquote><h2 id="header-请求参数" tabindex="-1">Header 请求参数 <a class="header-anchor" href="#header-请求参数" aria-label="Permalink to &quot;Header 请求参数&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;Content-Type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;application/json; charset=utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;Authorization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bearer YOUR_API_KEY&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //替换为自己的apikey</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="body-请求参数" tabindex="-1">Body 请求参数 <a class="header-anchor" href="#body-请求参数" aria-label="Permalink to &quot;Body 请求参数&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;user_prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cat dance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;aspect_ratio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16:9&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="参数说明" tabindex="-1">参数说明 <a class="header-anchor" href="#参数说明" aria-label="Permalink to &quot;参数说明&quot;">​</a></h2><h3 id="请求类型-application-json" tabindex="-1">请求类型: <code>application/json</code> <a class="header-anchor" href="#请求类型-application-json" aria-label="Permalink to &quot;请求类型: \`application/json\`&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>是否必需</th><th>描述</th></tr></thead><tbody><tr><td><code>user_prompt</code></td><td><code>string</code></td><td>必需</td><td>用户输入的提示词，用于生成内容。</td></tr><tr><td><code>aspect_ratio</code></td><td><code>string</code></td><td>可选</td><td>指定生成图像的宽高比，例如 <code>16:9</code>、<code>1:1</code> 等。</td></tr><tr><td><code>expand_prompt</code></td><td><code>boolean</code></td><td>可选</td><td>是否开启提示词优化，默认为 <code>false</code>。用于控制是否自动优化用户输入的提示词。</td></tr><tr><td><code>loop</code></td><td><code>boolean</code></td><td>必需</td><td>是否循环使用一张参考图。<code>true</code> 表示循环使用，<code>false</code> 表示不使用。</td></tr><tr><td><code>image_url</code></td><td><code>string</code></td><td>可选</td><td>参考图像的 URL 地址，支持第三方图像托管地址。必须是 Base64 编码格式的图像。</td></tr><tr><td><code>image_end_url</code></td><td><code>string</code></td><td>可选</td><td>终止图像生成的 URL 地址，支持第三方图像托管地址。必须是 Base64 编码格式的图像。</td></tr><tr><td><code>notify_hook</code></td><td><code>string</code></td><td>可选</td><td>回调地址，当生成完成后，系统会调用此地址进行通知。必须是有效的 URL，例如 <code>https://xxxxx</code>。</td></tr></tbody></table><h3 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-label="Permalink to &quot;使用说明&quot;">​</a></h3><ul><li><p><strong><code>user_prompt</code></strong>: 必需参数，用于指定生成内容的核心提示词。提示词应尽可能清晰和具体，以便生成系统能理解用户的需求并生成符合预期的内容。</p></li><li><p><strong><code>aspect_ratio</code></strong>: 可选参数，用于控制生成图像的宽高比。该参数接受如 <code>16:9</code>、<code>1:1</code> 等格式的输入，适用于需要特定比例输出的场景。</p></li><li><p><strong><code>expand_prompt</code></strong>: 可选参数，布尔值，用于决定是否对用户提供的提示词进行自动优化。设置为 <code>true</code> 时，系统会尝试改进提示词以提高生成质量。</p></li><li><p><strong><code>loop</code></strong>: 必需参数，布尔值，用于控制是否重复使用参考图像。如果设置为 <code>true</code>，参考图像将被循环使用来生成多个内容。</p></li><li><p><strong><code>image_url</code></strong>: 可选参数，指定一个 Base64 编码的图像 URL 地址作为参考。此 URL 应指向一个可以访问的图像资源，系统将使用该图像作为生成内容的基础。</p></li><li><p><strong><code>image_end_url</code></strong>: 可选参数，指定一个终止图像生成的 Base64 编码 URL 地址。与 <code>image_url</code> 类似，此参数提供终止生成过程时使用的图像。</p></li><li><p><strong><code>notify_hook</code></strong>: 可选参数，用于设置生成完成后系统发送通知的回调 URL 地址。确保提供的 URL 是有效的且可以接收系统的 POST 请求。</p></li></ul><h2 id="返回示例" tabindex="-1">返回示例 <a class="header-anchor" href="#返回示例" aria-label="Permalink to &quot;返回示例&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;created_at&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2024-07-22T12:47:28.553735Z&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;estimate_wait_seconds&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fc7fb008-7a5e-40ad-a7ff-dbb63db61be8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;last_frame&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;liked&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cat dance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;state&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pending&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;thumbnail&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;video&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,13),d=[n];function l(o,h,p,k,r,c){return a(),i("div",null,d)}const u=s(e,[["render",l]]);export{g as __pageData,u as default};
