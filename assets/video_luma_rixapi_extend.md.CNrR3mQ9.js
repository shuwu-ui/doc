import{_ as t,c as a,o as e,a3 as d}from"./chunks/framework.BY8T3x_S.js";const g=JSON.parse('{"title":"扩展视频","description":"","frontmatter":{},"headers":[],"relativePath":"video/luma/rixapi/extend.md","filePath":"video/luma/rixapi/extend.md"}'),s={name:"video/luma/rixapi/extend.md"},i=d(`<h1 id="扩展视频" tabindex="-1">扩展视频 <a class="header-anchor" href="#扩展视频" aria-label="Permalink to &quot;扩展视频&quot;">​</a></h1><blockquote><p>POST <code>https://api.gptoai.cc/luma/generations/{task_id}/extend</code></p></blockquote><h2 id="path-参数说明" tabindex="-1">Path 参数说明 <a class="header-anchor" href="#path-参数说明" aria-label="Permalink to &quot;Path 参数说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>是否必需</th><th>描述</th></tr></thead><tbody><tr><td><code>task_id</code></td><td><code>string</code></td><td>必需</td><td>任务 ID，用于唯一标识特定任务。</td></tr></tbody></table><h3 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-label="Permalink to &quot;使用说明&quot;">​</a></h3><ul><li><strong><code>task_id</code></strong>: 这是一个必需的路径参数，用于在 API 请求中指定特定任务的唯一标识符。你需要在 URL 中提供这个参数，以便服务器知道你要查询或操作哪个任务。</li></ul><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p>你的 API 请求为是 <code>/luma/generations/{task_id}/extend</code>，你可以用具体的任务 ID 替换 <code>{task_id}</code>，例如 <code>/luma/generations/12345/extend</code>，来获取或操作任务 ID 为 <code>12345</code> 的任务。确保在使用 API 时提供有效的 <code>task_id</code>，以正确执行请求。</p><h2 id="header-请求参数" tabindex="-1">Header 请求参数 <a class="header-anchor" href="#header-请求参数" aria-label="Permalink to &quot;Header 请求参数&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;Authorization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bearer YOUR_API_KEY&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //替换为自己的apikey</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="body-请求参数" tabindex="-1">Body 请求参数 <a class="header-anchor" href="#body-请求参数" aria-label="Permalink to &quot;Body 请求参数&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;user_prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cat dance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;aspect_ratio&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;16:9&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;expand_prompt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="body-参数说明" tabindex="-1">Body 参数说明 <a class="header-anchor" href="#body-参数说明" aria-label="Permalink to &quot;Body 参数说明&quot;">​</a></h2><h3 id="请求类型-application-json" tabindex="-1">请求类型: <code>application/json</code> <a class="header-anchor" href="#请求类型-application-json" aria-label="Permalink to &quot;请求类型: \`application/json\`&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>是否必需</th><th>描述</th></tr></thead><tbody><tr><td><code>user_prompt</code></td><td><code>string</code></td><td>必需</td><td>用户输入的提示词，用于生成内容。</td></tr><tr><td><code>aspect_ratio</code></td><td><code>string</code></td><td>必需</td><td>指定生成图像的宽高比，例如 <code>16:9</code>、<code>1:1</code> 等。</td></tr><tr><td><code>expand_prompt</code></td><td><code>boolean</code></td><td>可选</td><td>是否开启提示词优化，默认为 <code>false</code>。用于控制是否自动优化用户输入的提示词。</td></tr><tr><td><code>image_url</code></td><td><code>string</code></td><td>必需</td><td>参考图像的 URL 地址，支持第三方图像托管地址，需为 Base64 编码格式。</td></tr><tr><td><code>image_end_url</code></td><td><code>string</code></td><td>必需</td><td>终止图像生成的 URL 地址，支持第三方图像托管地址，需为 Base64 编码格式。</td></tr><tr><td><code>notify_hook</code></td><td><code>string</code></td><td>必需</td><td>回调地址，当生成完成后，系统会调用此地址进行通知。必须是有效的 URL，例如 <code>https://xxxxx</code>。</td></tr></tbody></table><h3 id="使用说明-1" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明-1" aria-label="Permalink to &quot;使用说明&quot;">​</a></h3><ul><li><p><strong><code>user_prompt</code></strong>: 必需参数，用于指定生成内容的核心提示词。提示词应尽可能清晰和具体，以便生成系统能理解用户的需求并生成符合预期的内容。</p></li><li><p><strong><code>aspect_ratio</code></strong>: 必需参数，用于控制生成图像的宽高比。该参数接受如 <code>16:9</code>、<code>1:1</code> 等格式的输入，适用于需要特定比例输出的场景。</p></li><li><p><strong><code>expand_prompt</code></strong>: 可选参数，布尔值，用于决定是否对用户提供的提示词进行自动优化。设置为 <code>true</code> 时，系统会尝试改进提示词以提高生成质量。</p></li><li><p><strong><code>image_url</code></strong>: 必需参数，指定一个 Base64 编码的图像 URL 地址作为参考。此 URL 应指向一个可以访问的图像资源，系统将使用该图像作为生成内容的基础。</p></li><li><p><strong><code>image_end_url</code></strong>: 必需参数，指定一个终止图像生成的 Base64 编码 URL 地址。与 <code>image_url</code> 类似，此参数提供终止生成过程时使用的图像。</p></li><li><p><strong><code>notify_hook</code></strong>: 必需参数，用于设置生成完成后系统发送通知的回调 URL 地址。确保提供的 URL 是有效的且可以接收系统的 POST 请求。</p></li></ul>`,17),o=[i];function n(r,l,h,c,p,k){return e(),a("div",null,o)}const _=t(s,[["render",n]]);export{g as __pageData,_ as default};
